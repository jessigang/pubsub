apiVersion: v1
kind: ConfigMap
metadata:
  name: ${userid}-pubsub-config
  namespace: ${app_namespace}
data:
  APP_NAME: "pubsub"
  SERVER_PORT: "8080"
  
  # MongoDB 설정
  MONGODB_HOST: "mongo-mongodb-headless"
  MONGODB_PORT: "27017" 
  MONGODB_DB: "telecomdb"
  MONGODB_USER: "telecomuser"
  
  # Event Grid 설정  
  EVENT_GRID_TOPIC: "${userid}-pubsub-usage"
---
apiVersion: v1  
kind: Secret
metadata:
  name: ${userid}-pubsub-secret
  namespace: ${app_namespace}
type: Opaque
data:
  mongodb-password: ${mongodb_password_base64}
  event-grid-endpoint: ${event_grid_endpoint_base64}  
  event-grid-key: ${event_grid_key_base64}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-pubsub-usage
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usage-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: usage-service
        userid: ${userid}
    spec:
      containers:
      - name: usage-service
        image: ${usage_image_path}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: ${userid}-pubsub-config
        env:
        - name: EVENT_GRID_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: ${userid}-pubsub-secret
              key: event-grid-endpoint
        - name: EVENT_GRID_KEY  
          valueFrom:
            secretKeyRef:
              name: ${userid}-pubsub-secret 
              key: event-grid-key
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu} 
            memory: ${resources_limits_memory}
---
apiVersion: v1
kind: Service  
metadata:
  name: ${userid}-pubsub-usage
  namespace: ${app_namespace}
spec:
  selector:
    app: usage-service
    userid: ${userid}
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-pubsub-alert
  namespace: ${app_namespace}  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alert-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: alert-service
        userid: ${userid}
    spec:
      containers:
      - name: alert-service
        image: ${alert_image_path}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: ${userid}-pubsub-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-pubsub-secret
              key: mongodb-password
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
---
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-pubsub-alert  
  namespace: ${app_namespace}
spec:
  selector:
    app: alert-service
    userid: ${userid}
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer

